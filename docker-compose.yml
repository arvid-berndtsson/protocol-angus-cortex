version: '3.8'

services:
  argus-cortex:
    build: .
    container_name: argus-cortex
    ports:
      - "8080:8080"  # API
      - "9090:9090"  # Metrics
    volumes:
      - ./config.yml:/app/config.yml:ro
      - ./models:/app/models:ro
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - argus-network
    restart: unless-stopped
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: argus-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - argus-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: argus-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - argus-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  argus-network:
    driver: bridge 